pipelines:
  default:
    - parallel:
        - step:
            image: bats/bats:1.9.0
            name: 'Build and Test'
            script:
              - echo "Running tests...."
              - test/gen_sbom.bats
        - step:
            image: koalaman/shellcheck-alpine:v0.9.0
            name: 'Shell Lint'
            script:
              - echo "Linting shell scripts"
              - shellcheck -x gen_sbom.sh
              - shellcheck gen_sbom_functions.sh
              - shellcheck test/gen_sbom.bats
        - step:
            image: hadolint/hadolint:v2.12.0-alpine
            name: 'Docker Lint'
            script:
              - echo "Linting Dockerfile(s)"
              - hadolint Dockerfile
  branches:
    main:
      - step:
          name: 'Build Docker Image'
          script:
            - IMAGE_NAME=${BITBUCKET_REPO_SLUG}
            - echo "IMAGE_NAME is set to:\ ${IMAGE_NAME}"
            - docker build . --file Dockerfile --tag ${IMAGE_NAME}
            - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
          services:
            - docker
          caches:
            - docker
          artifacts:
            - "*.tar"
      - step:
          name: 'Publish Docker Image'
          deployment: Production
          trigger: manual
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            - IMAGE_NAME=$BITBUCKET_REPO_SLUG
            - docker load --input "${IMAGE_NAME}.tar"
            - VERSION="prod-1.0.${BITBUCKET_BUILD_NUMBER}"
            - IMAGE=${DOCKERHUB_NAMESPACE}/${IMAGE_NAME}
            - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
            - docker push "${IMAGE}:${VERSION}"
          services:
            - docker
