definitions:
  steps:
    - step: &build-docker-image
        name: 'Build Docker Image'
        script:
          - IMAGE_NAME=${BITBUCKET_REPO_SLUG}
          - echo "IMAGE_NAME is set to:\ ${IMAGE_NAME}"
          - docker build --build-arg ARCH=amd64 --tag ${IMAGE_NAME} .
          - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
        services:
          - docker
        caches:
          - docker
        artifacts:
          - "*.tar"

pipelines:
  default:
    - parallel:
        - step:
            image: bats/bats:1.9.0
            name: 'Build and Test'
            script:
              - echo "Running tests...."
              - test/gen_sbom.bats --timing
        - step:
            image: koalaman/shellcheck-alpine:v0.9.0
            name: 'Shell Lint'
            script:
              - echo "Linting shell scripts"
              - shellcheck -x *.sh **/*.bats
        - step:
            image: hadolint/hadolint:v2.12.0-alpine
            name: 'Docker Lint'
            script:
              - echo "Linting Dockerfile(s)"
              - hadolint Dockerfile
        - step: *build-docker-image
  branches:
    main:
      - step: *build-docker-image
      - step:
          name: 'Publish Docker Image'
          deployment: Production
          trigger: manual
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
            - IMAGE_NAME=$BITBUCKET_REPO_SLUG
            - docker load --input "${IMAGE_NAME}.tar"
            - VERSION="${PROD_VERSION}"
            - IMAGE=${DOCKERHUB_NAMESPACE}/${IMAGE_NAME}
            - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
            - docker push "${IMAGE}:${VERSION}"
          services:
            - docker
